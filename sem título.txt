local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "[游꾺UPD2游꾺] +1 Blade Slayer",
    SubTitle = "By Zetra Hub 仇벒잺",
    TabWidth = 135,
    Size = UDim2.fromOffset(480, 360),
    Acrylic = true,
    Theme = "Darker",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "home" }),
    InfoScript = Window:AddTab({ Title = "Info Script", Icon = "scroll" }),
    Player = Window:AddTab({ Title = "Player", Icon = "user" }),
    Others = Window:AddTab({ Title = "Others", Icon = "star" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local Options = Fluent.Options

Fluent:Notify({
    Title = "By ZetraScripts YT",
    Content = "Thanks for using the script",
    Duration = 5
})

local SupportSection = Tabs.InfoScript:AddSection("Support")
Tabs.InfoScript:AddParagraph({
    Title = "Supported",
    Content = "- Mobile\n- PC\n- Emulator\n- Console"
})

local UpdatesSection = Tabs.InfoScript:AddSection("Updates")
Tabs.InfoScript:AddParagraph({
    Title = "Updates",
    Content = "- 3/11/2024"
})

local SupportSection = Tabs.InfoScript:AddSection("Support Executors")
Tabs.InfoScript:AddParagraph({
    Title = "Executors",
    Content = "- Delta\n- Fluxus\n- Arceus X\n- Wave\n- Codex"
})

local CreditsSection = Tabs.InfoScript:AddSection("Credits")

local linkParaCopiar = "https://youtube.com/@zetrascripts?si=suM_heCy4O_X-P4H"
Tabs.InfoScript:AddButton({
    Title = "Copy Link Channel",
    Callback = function()
        setclipboard(linkParaCopiar)
        print("Link copied to clipboard.")
    end
})

local AntiAFKEnabled = true
local Toggle = Tabs.Others:AddToggle("MyToggle", {Title = "Anti AFK", Default = true})
Toggle:OnChanged(function()
    AntiAFKEnabled = Options.MyToggle.Value
    print("Toggle changed:", AntiAFKEnabled)
end)
Options.MyToggle:SetValue(true)

Tabs.Others:AddButton({
    Title = "Server Hop",
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local HttpService = game:GetService("HttpService")
        local placeId = game.PlaceId

        local function serverHop()
            local servers
            local cursor = ""

            local success, response = pcall(function()
                local url = "https://games.roblox.com/v1/games/" .. placeId .. "/servers/Public?sortOrder=Asc&limit=100&cursor=" .. cursor
                return HttpService:JSONDecode(game:HttpGet(url))
            end)

            if success and response and response.data then
                servers = response.data
            else
                warn("N칚o foi poss칤vel obter servidores.")
                return
            end

            for _, server in ipairs(servers) do
                if server.id ~= game.JobId and server.playing < server.maxPlayers then
                    TeleportService:TeleportToPlaceInstance(placeId, server.id)
                    return
                end
            end

            if response.nextPageCursor then
                cursor = response.nextPageCursor
                serverHop()
            else
                warn("Nenhum servidor dispon칤vel para hop.")
            end
        end

        serverHop()
    end
})

Tabs.Others:AddButton({
    Title = "Rejoin",
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local player = game.Players.LocalPlayer
        TeleportService:Teleport(game.PlaceId, player)
    end
})

local WalkSpeedSection = Tabs.Player:AddSection("WalkSpeed")

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

local defaultWalkSpeed = 16 
local currentWalkSpeed = defaultWalkSpeed
local speedEnabled = false

local function setWalkSpeed(speed)
    if character and character:FindFirstChild("Humanoid") then
        character.Humanoid.WalkSpeed = speed
    end
end

local Input = Tabs.Player:AddInput("Input", {
    Title = "Select Speed",
    Default = tostring(defaultWalkSpeed),
    Placeholder = "choose speed",
    Numeric = true,
    Finished = true,
    Callback = function(Value)
        local speed = tonumber(Value)
        if speed and speed >= 0 and speed <= 100 then
            currentWalkSpeed = speed
            if speedEnabled then
                setWalkSpeed(currentWalkSpeed)
            end
            print("Velocidade definida para:", currentWalkSpeed)
        else
            print("Por favor, insira um valor entre 0 e 100.")
        end
    end
})

local Toggle = Tabs.Player:AddToggle("MyToggle", {Title = "Apply Speed", Default = false })

Toggle:OnChanged(function()
    speedEnabled = Toggle.Value
    if speedEnabled then
        setWalkSpeed(currentWalkSpeed)
        print("Velocidade ativada:", currentWalkSpeed)
    else
        setWalkSpeed(defaultWalkSpeed)
        print("Velocidade desativada. Voltando ao padr칚o:", defaultWalkSpeed)
    end
end)

player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    setWalkSpeed(speedEnabled and currentWalkSpeed or defaultWalkSpeed)
end)

Input:OnChanged(function()
    print("Input atualizado:", Input.Value)
end)

local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Auto Attack", Default = false })

local args = {
    [1] = {
        ["Goal"] = "LeftClick",
        ["Mobile"] = true
    }
}

local isAutoClicking = false -- Vari치vel para controlar o estado do auto click
local clickThread = nil -- Vari치vel para armazenar o thread de cliques

-- Callback para o toggle
Toggle:OnChanged(function(value)
    if value then
        print("Auto Click ativado.")
        isAutoClicking = true
        -- Inicia o loop de cliques em um novo thread
        clickThread = spawn(function()
            while isAutoClicking do
                -- Verifica se o personagem e o Communicate est칚o dispon칤veis
                local player = game.Players.LocalPlayer
                if player and player.Character and player.Character:FindFirstChild("Communicate") then
                    player.Character.Communicate:FireServer(unpack(args))
                else
                    print("Erro: O personagem ou Communicate n칚o est치 dispon칤vel.")
                end
                wait(0.1) -- Intervalo entre os cliques
            end
        end)
    else
        print("Auto Click desativado.")
        isAutoClicking = false -- Para o loop de cliques imediatamente
        if clickThread then
            clickThread = nil -- Limpa o thread
        end
    end
end)

local AutoFarmPlayerToggle = Tabs.Main:AddToggle("AutoFarmPlayerToggle", { 
    Title = "Kill Farm (Random Players)", 
    Default = false 
})

local AutoFarmEnabled = false
local currentTarget = nil

local function TeleportToPlayerBack(targetPlayer)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local targetCharacter = targetPlayer.Character
        local targetPosition = targetCharacter.HumanoidRootPart.Position
        local targetLookVector = targetCharacter.HumanoidRootPart.CFrame.LookVector

        if character then
            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart then
                -- Aumentar a dist칙ncia para 4 unidades
                local behindPosition = targetPosition - (targetLookVector * 4) + Vector3.new(0, 2, 0)
                humanoidRootPart.CFrame = CFrame.new(behindPosition)
            end
        end
    end
end

local function FindClosestPlayer()
    local closestPlayer = nil
    local closestDistance = math.huge

    for _, targetPlayer in pairs(game.Players:GetPlayers()) do
        if targetPlayer ~= game.Players.LocalPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") and targetPlayer.Character.Humanoid.Health > 0 then
            local playerPosition = targetPlayer.Character.HumanoidRootPart.Position
            local localPlayerPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
            local distance = (playerPosition - localPlayerPosition).Magnitude

            if distance < closestDistance then
                closestDistance = distance
                closestPlayer = targetPlayer
            end
        end
    end

    return closestPlayer
end

local function StartAutoFarm()
    while AutoFarmEnabled do
        if currentTarget == nil or not currentTarget.Character or not game.Players:FindFirstChild(currentTarget.Name) or currentTarget.Character.Humanoid.Health <= 0 then
            currentTarget = FindClosestPlayer()
            if currentTarget then
                TeleportToPlayerBack(currentTarget)
            end
        end

        if currentTarget and currentTarget.Character and currentTarget.Character:FindFirstChild("HumanoidRootPart") then
            TeleportToPlayerBack(currentTarget)
        end

        wait(0.1) -- Ajustar o tempo de espera conforme necess치rio
    end
end

Toggle:OnChanged(function()
    AutoFarmEnabled = Options.AutoFarmPlayerToggle.Value

    if AutoFarmEnabled then
        currentTarget = FindClosestPlayer()
        if currentTarget then
            TeleportToPlayerBack(currentTarget)
        end
        StartAutoFarm()
    else
        currentTarget = nil
        print("Auto Farm desativado.")
    end
end)

Options.AutoFarmPlayerToggle:SetValue(false)

SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)

Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
})

SaveManager:LoadAutoloadConfig()