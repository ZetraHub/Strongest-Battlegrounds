local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "PETS GO!",
    SubTitle = "By Zetra Hub",
    TabWidth = 135,
    Size = UDim2.fromOffset(480, 360),
    Acrylic = true,
    Theme = "Darker",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    InfoScript = Window:AddTab({ Title = "Info Script", Icon = "scroll" }),
    AutoFarm = Window:AddTab({ Title = "Auto Farm", Icon = "egg" }),
    Others = Window:AddTab({ Title = "Others", Icon = "star" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local Options = Fluent.Options

Fluent:Notify({
    Title = "By ZetraScripts YT",
    Content = "Thanks for using the script",
    Duration = 5
})

local SupportSection = Tabs.InfoScript:AddSection("Support")
Tabs.InfoScript:AddParagraph({
    Title = "Supported",
    Content = "- Mobile\n- PC\n- Emulator\n- Console"
})

local UpdatesSection = Tabs.InfoScript:AddSection("Updates")
Tabs.InfoScript:AddParagraph({
    Title = "Updates",
    Content = "- 5/11/2024"
})

local SupportSection = Tabs.InfoScript:AddSection("Support Executors")
Tabs.InfoScript:AddParagraph({
    Title = "Executors",
    Content = "- Delta\n- Fluxus\n- Arceus X\n- Wave\n- Codex"
})

local CreditsSection = Tabs.InfoScript:AddSection("Credits")

local linkParaCopiar = "https://youtube.com/@zetrascripts?si=suM_heCy4O_X-P4H"
Tabs.InfoScript:AddButton({
    Title = "Copy Link Channel",
    Callback = function()
        setclipboard(linkParaCopiar)
        print("Link copied to clipboard.")
    end
})

local AntiAFKEnabled = true
local Toggle = Tabs.Others:AddToggle("MyToggle", {Title = "Anti AFK", Default = true})
Toggle:OnChanged(function()
    AntiAFKEnabled = Options.MyToggle.Value
    print("Toggle changed:", AntiAFKEnabled)
end)
Options.MyToggle:SetValue(true)

Tabs.Others:AddButton({
    Title = "Server Hop",
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local HttpService = game:GetService("HttpService")
        local placeId = game.PlaceId

        local function serverHop()
            local servers
            local cursor = ""

            local success, response = pcall(function()
                local url = "https://games.roblox.com/v1/games/" .. placeId .. "/servers/Public?sortOrder=Asc&limit=100&cursor=" .. cursor
                return HttpService:JSONDecode(game:HttpGet(url))
            end)

            if success and response and response.data then
                servers = response.data
            else
                warn("Não foi possível obter servidores.")
                return
            end

            for _, server in ipairs(servers) do
                if server.id ~= game.JobId and server.playing < server.maxPlayers then
                    TeleportService:TeleportToPlaceInstance(placeId, server.id)
                    return
                end
            end

            if response.nextPageCursor then
                cursor = response.nextPageCursor
                serverHop()
            else
                warn("Nenhum servidor disponível para hop.")
            end
        end

        serverHop()
    end
})

Tabs.Others:AddButton({
    Title = "Rejoin",
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local player = game.Players.LocalPlayer
        TeleportService:Teleport(game.PlaceId, player)
    end
})

local replicatedStorage = game:GetService("ReplicatedStorage")
local network = replicatedStorage:WaitForChild("Network")
local eggsRollRemote = network:WaitForChild("Eggs_Roll")

local isRolling = false -- Variável para controlar o estado da rolagem

local AutoRoolSection = Tabs.AutoFarm:AddSection("Auto Roll")

-- Cria o toggle no início do script
local Toggle = Tabs.AutoFarm:AddToggle("MyToggle", {Title = "Auto Roll + Skip Animation", Default = false })

local replicatedStorage = game:GetService("ReplicatedStorage")
local network = replicatedStorage:WaitForChild("Network")
local eggsRollRemote = network:WaitForChild("Eggs_Roll")

-- Variável para controlar o estado da rolagem
local isRolling = false 

-- Função para rolar ovos automaticamente
local function autoRollEggs()
    while isRolling do
        eggsRollRemote:InvokeServer()
        wait(0.1) -- Ajuste o tempo de espera conforme necessário
    end
end

-- Define o comportamento do toggle
Toggle:OnChanged(function()
    if Toggle.Value then
        print("Toggle ativado: Iniciando rolagem de ovos.")
        isRolling = true
        task.spawn(autoRollEggs) -- Inicia a rolagem em uma nova thread
    else
        print("Toggle desativado: Parando rolagem de ovos.")
        isRolling = false
    end
end)

-- Inicializa o toggle como desativado
Toggle:SetValue(false)

SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)

Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
})

SaveManager:LoadAutoloadConfig()
